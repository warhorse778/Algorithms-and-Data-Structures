Linked list - съхраняват подредена съвкупност от елементи. Добавянето е бърза операция, но по бавна от
АrrayList, защото всяко добавяне заделя памет. Търсенето е бавна операция, защото е свързано с обхождането на 
всички елементи. Достъпът до елемент по индекс е бавна операция, защото в свързания списък няма индексиране
и се налага обхождане на списъка.
O(1) - time complexity
____
Динамичен масив ArrayList - Съхранява елементите си в масив. Търсенето в ArrayList e бавна операция, защото се
обхождат всички елементи. Изтриването по индекс или стойност се изпълнява за линейно време. Изтриването е
бавна операция защото е свързана с преместването на всички елементи които са след изтрития с една позиция на ляво.

____
HashMap - Предполага съхраняване на двойки ключ - стойност като осигурява бързо търсене по ключ. При реализацията
с хеш-таблица добавянето, търсенето и изитриването на елементи работят много бързо - със средна сложност 
константа. Операцията достъп по индекс не е достъпна, зашото елементите в хеш-таблицата се нареждат по почти
случаен принцип и редът им на постъпване не се запазва. Ако трябва да се сложат стойности в една и съща клетка
 те се нареждат в свързан списък( колизии се решават чрез chaining). 

В хеш-таблицата един елемент се среща най-много веднъж. Ако добавим последователно два елемента с един и същ
ключ, последния постъпул измества предходния и в крайна сметка изгубваме единия.

Хеш-таблицата се препоръчва винаги, когато ни трябва бързо търсене по ключ. Ползва се и за бързо добавяне на 
елементи. Не търсим удобство с хеш-тейбъла

O(1) - time complexity
___
TreeMap - Съхранение на двойки ключ-стойност, при което ключовете са подредено по големина. Структурата осигурява
бързо изпълнение на основните операции (добавяне на елемент, търсене по ключ и изтриване на елемент).
Структурата, с коята се изпълняват тези операции, е логаритмична - О(log(N)). Това означава 10 стъпки при 1000
елемента и 2- стъпки при 1 000 000 елемента.

най-лошия случай при TreeMap и HashMap -> log2(N) - time complexity

Използваме TreeMap в случаите, които ни трябва структура, в която бързо да добавяме, бързо да търсим и имаме 
нужда от извливане на елементите, сортирани в нарастващ ред.В общия случай HashMap работи малко по-бързо от
TreeMap и е за предпочитане.

___
Множество, реализирано с хеш-таблица HashSet - Операция търсене по индекс няма, тоест ние нямаме директен достъп
до елементите. Множество, реализирано чрез хеш-таблица (класът хеш сет) е частен случай на хеш-таблица, при който
имаме само ключове, а стойностите, записани под всеки ключ са без значение.


___
Множество с дърво(TreeSet) - е частен случай на TreeMap, в който ключовете и стойностите съвпадат
O(log(N)) - time complexity
the height of the tree is ALWAYS O(log(N)) - time complexity


